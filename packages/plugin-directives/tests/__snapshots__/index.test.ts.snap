// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`extends example schema > generates expected schema 1`] = `
"scalar Date

enum EN {
  ONE
  TWO
}

interface IF {
  field: String
}

input In {
  test: String
}

input MyInput {
  booleanWithDefault: Boolean = false
  enumWithDefault: EN = TWO
  id: ID!
  idWithDefault: ID = 123
  ids: [ID!]!
  idsWithDefault: [ID!] = [123, 456]
  stringWithDefault: String = "default string"
}

input MyOtherInput {
  booleanWithDefault: Boolean = false
}

type Obj {
  field: String
}

type Query {
  cacheControlPrivate: String
  cacheControlPublic: String
  test(arg1: String, myInput: MyInput, myOtherInput: MyOtherInput = {}): String
}

union UN = Obj"
`;

exports[`extends example schema > generates expected schema with directives 1`] = `
"schema {
  query: Query
}

scalar Date @s(foo: 123)

enum EN @e(foo: 123) {
  ONE @ev(foo: 123)
  TWO
}

interface IF @i(foo: 123) {
  field: String
}

input In @io(foo: 123) {
  test: String @if(foo: 123)
}

input MyInput {
  booleanWithDefault: Boolean = false
  enumWithDefault: EN = TWO
  id: ID!
  idWithDefault: ID = 123
  ids: [ID!]!
  idsWithDefault: [ID!] = [123, 456]
  stringWithDefault: String = "default string"
}

input MyOtherInput {
  booleanWithDefault: Boolean = false
}

type Obj @o(foo: 123) {
  field: String
}

type Query @o(foo: 123) {
  cacheControlPrivate: String @cacheControl(scope: "PRIVATE", maxAge: 100, inheritMaxAge: true)
  cacheControlPublic: String @cacheControl(scope: "PUBLIC", maxAge: 100, inheritMaxAge: true)
  test(arg1: String @a(foo: 123), myInput: MyInput, myOtherInput: MyOtherInput = {}): String @f(foo: 123) @rateLimit(max: 1, window: "5s", message: "Too many requests, please try again in 5 seconds.")
}

union UN @u(foo: 123) = Obj"
`;
